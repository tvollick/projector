STORES

- workouts
- ExerciseLibrary
- WorkoutCurrent
  - dateCreated
  - blocks []
    - repetitions
    - exercises [{}...]






======


 REDUX FLOW
 - an Action describes user intent. {type: RATE_COURSE, rating: 5}
  - must have a type.
  - action will be handled by a reducer which updates state and updates react
    components via props.

    function appReducer(state = defaultState, action) {
      switch(action.type) {
        case RATE_COURSE:
        // return new state.
      }
    }

    // ACTION CREATOR
    rateCourse(rating) {
      return { type: RATE_COURSE, rating: rating} // <-- ACTION
    }

    // REDUX STORE API

      created by createStore(reducer);
      store.dispatch(action)
      store.subscribe(listen)
      store.getState()
      replaceReducer(nextReducer)

      IMMUTABILITY to change state, return a new object. (entirely new)

      Signature
      Object.assign(target, ...sources as many as you want)

      Example needs babel-polyfill.
      Object.assign({}, state, {role: 'admin'});
        - create a new empty object. mixin existing state



{
    id: 25,
    startTime: "20171023 10:13",
    workoutType: "Kettle Bell Session",
    exercises: [
      {
        name: 'Rowing machine',
        category: 'cardio',
        metrics: [
          {
            name: "time",
            value: 15000
          },
          {
            name: "resistance",
            value: 6
          }
        ]
      },
      {
        name: 'Kettle Bell Swings',
        category: 'kettle bells',
        metrics: [
          {
            name: "reps",
            value: 15
          },
          {
            name: "weight",
            value: 45
          }
        ]
      },
      {
        name: 'Crimp and two finger',
        category: 'cardio',
        metrics: [
          {
            name: "time",
            value: 1500
          }
        ]
      }
    ]
},
